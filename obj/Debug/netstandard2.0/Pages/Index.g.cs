#pragma checksum "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "010407ab18bdc4d2e747d8b8ff2f10fe17f0e206"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorApp1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using BlazorApp1;
    using BlazorApp1.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, @"<div class=""jumbotron"">
    <h2>Welcome to CryptoRobots!</h2>
    <p class=""lead"">A tiny webapp build with Blazor, new experimental .NET framework. <a href=""https://blazor.net"">Learn more</a></p>
    <hr class=""my-4"">
    <p>We don't have anything to do with Crypto, or Bitcoin, or CryptoKitties. CryptoRobots just sounds better than Robots, that's all.</p>
    <a class=""btn btn-primary btn-lg"" href=""/get_robot"" role=""button"">Create a Robot</a>
</div>
");
            builder.OpenElement(1, "div");
            builder.AddAttribute(2, "class", "container marketing");
            builder.AddContent(3, "\n\n    ");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "class", "row");
            builder.AddContent(6, "\n");
#line 16 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
     if (people == null)
    {

#line default
#line hidden
            builder.AddContent(7, "        ");
            builder.AddMarkupContent(8, "<p><em>Loading all robots...</em></p>\n");
#line 19 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
    }
    else
    {
        

#line default
#line hidden
#line 22 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
         foreach (var person in people)
        {

#line default
#line hidden
            builder.AddContent(9, "            ");
            builder.OpenElement(10, "div");
            builder.AddAttribute(11, "class", "col-lg-4");
            builder.AddContent(12, "\n                ");
            builder.OpenElement(13, "img");
            builder.AddAttribute(14, "class", "rounded-circle");
            builder.AddAttribute(15, "alt", "Generic placeholder image");
            builder.AddAttribute(16, "width", "200");
            builder.AddAttribute(17, "height", "200");
            builder.AddAttribute(18, "src", "https://robohash.org/" + (person.id));
            builder.CloseElement();
            builder.AddContent(19, "\n                ");
            builder.OpenElement(20, "h2");
            builder.AddContent(21, person.name);
            builder.CloseElement();
            builder.AddContent(22, "\n                ");
            builder.OpenElement(23, "p");
            builder.OpenElement(24, "a");
            builder.AddAttribute(25, "class", "btn btn-secondary btn-block");
            builder.AddAttribute(26, "role", "button");
            builder.AddAttribute(27, "href", "/robot_details/" + (person.name) + "/" + (person.id));
            builder.AddContent(28, "Details");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(29, "\n                ");
            builder.OpenElement(30, "p");
            builder.OpenElement(31, "button");
            builder.AddAttribute(32, "class", "btn btn-danger btn-block");
            builder.AddAttribute(33, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=>deletePerson(@person.id)));
            builder.AddAttribute(34, "role", "button");
            builder.AddContent(35, "Remove");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(36, "\n            ");
            builder.CloseElement();
            builder.AddContent(37, "\n");
#line 30 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
        }

#line default
#line hidden
#line 30 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
         

    }

#line default
#line hidden
            builder.AddContent(38, "    ");
            builder.CloseElement();
            builder.AddContent(39, "\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 37 "/home/aakatev/Documents/dotnet/BlazorApp1/Pages/Index.cshtml"
            
    Person[] people;

    protected override async Task OnInitAsync()
    {
        people = await Http.GetJsonAsync<Person[]>("https://fxns-at-azure.azurewebsites.net/api/get_data");
    }

    class Person
    {
        public int id { get; set; }
        public string name { get; set; }
    }

    async void deletePerson(int delete_id)
    {
        var response = await Http.DeleteAsync("https://fxns-at-azure.azurewebsites.net/api/delete_data?id="+delete_id);

        if (response.IsSuccessStatusCode) {
            people = await Http.GetJsonAsync<Person[]>("https://fxns-at-azure.azurewebsites.net/api/get_data");
            this.StateHasChanged();
        }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
