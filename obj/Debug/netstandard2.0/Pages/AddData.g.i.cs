#pragma checksum "/home/aakatev/Documents/projects20/BlazorApp1/Pages/AddData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8a723890b533ed7672b0ffbf0c6e1ae4ca219b7b"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorApp1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using BlazorApp1;
    using BlazorApp1.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/get_robot")]
    public class AddData : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 34 "/home/aakatev/Documents/projects20/BlazorApp1/Pages/AddData.cshtml"
            
  static Random rnd = new Random();
  string current_name;
  string hidden_pic = "d-none";
  string hidden_alert = "d-none";
  int current_id = rnd.Next(300);

  List<int> taken_ids = new List<int>();
  Robot[] robots;

  class Robot
  {
    public int id { get; set; }
    public string name { get; set; }
  }


  protected override async Task OnInitAsync()
  { 
    robots = await Http.GetJsonAsync<Robot[]>("https://fxns-at-azure.azurewebsites.net/api/get_data");
    
    foreach (var robot in robots)
    {
      taken_ids.Add(robot.id);
    }

    if (taken_ids.Contains(current_id)) 
    {
      increaseCount();
    }

    hidden_pic = "";

  }


  protected async Task addPerson()
  {
    try
    {
      if (current_name.Length < 3 ) 
      {
        hidden_alert = "";
      } 
      else 
      {
        await Http.SendJsonAsync(
          HttpMethod.Post,
          "https://fxns-at-azure.azurewebsites.net/api/post_data", 
          new Person{id=current_id, name=current_name}
        );
        UriHelper.NavigateTo("/");
      }
    }  
    catch (NullReferenceException) 
    {
      hidden_alert = "";
    }
  }

  void rerender() 
  {
    this.StateHasChanged();
  }

  void increaseCount()
  {
    do {
      current_id++;
    } while (taken_ids.Contains(current_id));

    rerender();
  }

  void decreaseCount()
  {
    do {
      current_id--;
    } while (taken_ids.Contains(current_id));

    rerender();
  }

  void goHome()
  {
    UriHelper.NavigateTo("/");
  }

  class Person
  {
    public int id { get; set; }
    public string name { get; set; }
  }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
